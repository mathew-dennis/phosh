name: Build and Package phosh for ARM64

on:
  push:
    branches:
      - background-new
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up cross-compilation environment and build
      run: |
        docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace debian:latest /bin/bash -c "
          # Update package list and install essential packages
          apt-get update && \
          apt-get install -y build-essential meson ninja-build git \
                             crossbuild-essential-arm64 && \
          apt-get -y build-dep . && \

          # Initialize and update submodules
          git submodule update --init --recursive && \

          # Set up cross-compilation toolchain
          export CC=aarch64-linux-gnu-gcc && \
          export CXX=aarch64-linux-gnu-g++ && \
          export AR=aarch64-linux-gnu-ar && \
          export AS=aarch64-linux-gnu-as && \
          export LD=aarch64-linux-gnu-ld && \
          export STRIP=aarch64-linux-gnu-strip && \

          # Create build directory and configure for ARM64
          meson setup _build --cross-file /usr/share/meson/debian-cross/aarch64-linux-gnu.txt && \
          meson compile -C _build && \

          # Create a source distribution and build the DEB package
          dpkg-source --build . && \
          debuild -us -uc -b -a arm64
        "

    - name: Upload DEB package
      uses: actions/upload-artifact@v3
      with:
        name: deb-package
        path: "*.deb"
